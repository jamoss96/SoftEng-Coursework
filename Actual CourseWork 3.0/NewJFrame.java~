
import java.util.*;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author up728335
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public ArrayList<DataNode> nodes;
    public ArrayList<DataNode> tempNodes;
    private ArrayList<String> names;
    public Boolean going = true;
    public int created = 0;
    private DefaultListModel model;
    private DefaultListModel pertModel;
    private DefaultListModel emptyModel;
    
    public NewJFrame(ArrayList<DataNode> nodes) {
        names = new ArrayList<String>();
        model = new DefaultListModel();
        pertModel = new DefaultListModel();
        tempNodes = new ArrayList<DataNode>();
        emptyModel = new DefaultListModel();
        this.nodes = nodes;
        init();
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">  
      
          // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        wbtParent = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        parentList = new javax.swing.JList(model);
        confirmBut = new javax.swing.JButton();
        nameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pertCheck = new javax.swing.JCheckBox();
        pertStartNodeCheck = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        pertList = new javax.swing.JList(pertModel);
        pertDurationTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        parentList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        pertList.setSelectionModel(new DefaultListSelectionModel() {
          @Override
          public void setSelectionInterval(int index0, int index1) {
            if(super.isSelectedIndex(index0)) {
              super.removeSelectionInterval(index0, index1);
            }
            else {
              super.addSelectionInterval(index0, index1);
            }
          }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Add A New Task");

        wbtParent.setText("WBT Parent");
        wbtParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wbtParentActionPerformed(evt);
            }
        });
        
        parentList.setModel(model);
        jScrollPane1.setViewportView(parentList);


        confirmBut.setText("Confirm");
        confirmBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButActionPerformed(evt);
            }
        });

        jLabel1.setText("Task Name");

        pertCheck.setText("Pert");
        pertCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pertCheckActionPerformed(evt);
            }
        });
        
        

        pertList.setModel(pertModel);
        jScrollPane2.setViewportView(pertList);

        jLabel3.setText("Task Duration");
        
        pertStartNodeCheck.setText("Pert Starting Task");
        pertStartNodeCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pertStartNodeCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(confirmBut))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(wbtParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameTextField)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pertStartNodeCheck)
                            .addComponent(pertCheck))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pertDurationTextField)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(wbtParent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confirmBut)
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pertCheck)
                            .addComponent(pertDurationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(pertStartNodeCheck))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        wbtParent.setVisible(false);
        pertStartNodeCheck.setVisible(false);
        pack();
    }// </editor-fold>                                      

    private void wbtParentActionPerformed(java.awt.event.ActionEvent evt) {                                           
      if(wbtParent.isSelected()){parentList.setModel(emptyModel); }
      else{parentList.setModel(model);}
    }
    
    private void pertStartNodeCheckActionPerformed(java.awt.event.ActionEvent evt) {                                           
      if(wbtParent.isSelected()){pertList.setModel(emptyModel); }
      else{pertList.setModel(pertModel);}
    }
    
     private void pertCheckActionPerformed(java.awt.event.ActionEvent evt) {   
       if(!pertCheck.isSelected()){
         pertDurationTextField.setEditable(false);
         pertList.setModel(emptyModel);
         pertStartNodeCheck.setEnabled(false);
       }
       else{
         pertDurationTextField.setEditable(true);
         pertList.setModel(pertModel);
         pertStartNodeCheck.setEnabled(true);
       }
    }
    
    private void confirmButActionPerformed(java.awt.event.ActionEvent evt){
       Boolean textint = new Boolean(false);
      try {
         Integer.parseInt(pertDurationTextField.getText());
         textint = true;
      } catch (NumberFormatException e) {
         textint = false;
      }
      System.out.println((!nameTextField.getText().equals("") && !parentList.isSelectionEmpty() && ((pertCheck.isSelected() && !pertDurationTextField.getText().equals("") && textint &&  !pertList.isSelectionEmpty()) || !pertCheck.isSelected()) ));
      if(!nameTextField.getText().equals("") && !parentList.isSelectionEmpty() && ((pertCheck.isSelected() && !pertDurationTextField.getText().equals("") && textint &&  !pertList.isSelectionEmpty()) || !pertCheck.isSelected()) ){
       
        DataNode tempNode = new DataNode(nameTextField.getText());
       
       tempNode.wbtParent = wbtParent.isSelected();
       if(!wbtParent.isSelected()){
        tempNode.wbtParentNode = nameMatch((String) parentList.getSelectedValue());
       }
       tempNode.pertSel = pertCheck.isSelected();
       if(pertCheck.isSelected()){ 
       tempNode.pertDuration = Integer.parseInt(pertDurationTextField.getText());
       tempNode.parents = listToArray(pertList.getSelectedValuesList());
       }
       
     tempNode.init();
     tempNode.pertInit();
     tempNodes.add(tempNode);
     setVisible(false);
     reset();
    }
    }
    
    public DataNode nameMatch(String name){
      for(DataNode node:nodes){
          if(node.name.equals(name)){
            return node;
          }
      }
      return null;
    }
      
    public void resetNodes(){
      tempNodes.clear();
    }

      
    
    
    public void getNodes(ArrayList<DataNode> nodes){
     this.nodes = nodes; 
    }
    
    public void reset(){
      wbtParent.setSelected(false);
      pertCheck.setSelected(true);
      nameTextField.setText("");
      pertDurationTextField.setText("");
      pertDurationTextField.setEditable(true);
      parentList.setModel(model);
      pertList.setModel(pertModel);
      model.clear();
      pertModel.clear();

      
    }
    
    public void setModel(){
      if(!nodes.isEmpty()){
      for(DataNode node : nodes){
       model.addElement(node.name);
        
      }
    }
    }
    
     public void setPertModel(){
      if(!nodes.isEmpty()){
      for(DataNode node : nodes){
        if(node.pertSel){
       pertModel.addElement(node.name);
        }
        
      }
    }
    }
    

    
    public void init(){
        setVisible(true);
      for(DataNode node:nodes){
          names.add(node.name);
      }   
    }
    
    public ArrayList<DataNode> getNewNodes(){
      return tempNodes;
    }
    
    private ArrayList<DataNode> listToArray(List<String> names){
      ArrayList<DataNode> tempArray = new ArrayList<DataNode>();
      for(String name:names){
          tempArray.add(nameMatch(name));
      }
      return tempArray;
    }
    
    public String getName(){return nameTextField.getText();}
    public Boolean getwbtParent(){return wbtParent.isSelected();}

    // Variables declaration - do not modify                     
    private javax.swing.JButton confirmBut;
    private javax.swing.JCheckBox wbtParent;
    private javax.swing.JCheckBox pertCheck;
    private javax.swing.JCheckBox pertStartNodeCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField pertDurationTextField;
    private javax.swing.JList parentList;
    private javax.swing.JList pertList;
    // End of variables declaration                   
}
