
import java.util.ArrayList;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author up728335
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public ArrayList<DataNode> nodes;
    public ArrayList<DataNode> tempNodes;
    private ArrayList<String> names;
    public Boolean going = true;
    public int created = 0;
    private DefaultListModel model;
    private DefaultListModel emptyModel;
    
    public NewJFrame(ArrayList<DataNode> nodes) {
        names = new ArrayList<String>();
        model = new DefaultListModel();
        tempNodes = new ArrayList<DataNode>();
        emptyModel = new DefaultListModel();
        this.nodes = nodes;
        init();
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">  
      
          // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        parentList = new javax.swing.JList(model);
        confirmBut = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        parentList1 = new javax.swing.JList();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        parentList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Add A New Task");

        jCheckBox1.setText("WBT Parent");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        
        parentList.setModel(model);
        jScrollPane1.setViewportView(parentList);


        confirmBut.setText("Confirm");
        confirmBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButActionPerformed(evt);
            }
        });

        jLabel1.setText("Task Name");

        jCheckBox2.setText("Pert");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        
        

        parentList1.setModel(model);
        jScrollPane2.setViewportView(parentList1);

        jLabel3.setText("Task Duration");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(confirmBut))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jCheckBox2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confirmBut)
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>                   

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
      if(jCheckBox1.isSelected()){parentList.setModel(emptyModel); }
      else{parentList.setModel(model);}
    }
    
     private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {                                          
       
    }
    
    private void confirmButActionPerformed(java.awt.event.ActionEvent evt){
      if(parentList.isSelectionEmpty() && jCheckBox1.isSelected()){
      if(!jCheckBox1.isSelected()){
        tempNodes.add(new DataNode(583 + 75 , 300, getName(), getwbtParent(),  nameMatch((String) parentList.getSelectedValue())));
                      System.out.println(parentList.getSelectedValue());
      }
     else{
           tempNodes.add(new DataNode(583 + 75, 300, getName(), getwbtParent()));
           System.out.println(parentList.getSelectedValue());
          }
      
         System.out.println(nodes);
         setVisible(false);
      }
      else if(!parentList.isSelectionEmpty() && !jCheckBox1.isSelected()){
        if(!jCheckBox1.isSelected()){
        tempNodes.add(new DataNode(nameMatch((String) parentList.getSelectedValue()).x, nameMatch((String) parentList.getSelectedValue()).y +150, getName(), getwbtParent(),  nameMatch((String) parentList.getSelectedValue())));
                      System.out.println(parentList.getSelectedValue());
      }
     else{
           tempNodes.add(new DataNode(nameMatch((String) parentList.getSelectedValue()).x, nameMatch((String) parentList.getSelectedValue()).y +150, getName(), getwbtParent()));
           System.out.println(parentList.getSelectedValue());
          }
      
         System.out.println(nodes);
         setVisible(false);
      }
      
    }
    
    public DataNode nameMatch(String name){
      for(DataNode node:nodes){
          if(node.name.equals(name)){
            return node;
          }
      }
      return null;
    }
      
    public void resetNodes(){
      tempNodes.clear();
    }

      
    
    
    public void getNodes(ArrayList<DataNode> nodes){
     this.nodes = nodes; 
    }
    
    public void reset(){
      jCheckBox1.setSelected(false);
      jTextField1.setText("");
      parentList.setModel(model);
      model.clear();
    }
    
    public void setModel(){
      if(!nodes.isEmpty()){
      for(DataNode node : nodes){
       model.addElement(node.name);
        
      }
    }
    }
    

    
    public void init(){
        setVisible(true);
      for(DataNode node:nodes){
          names.add(node.name);
      }   
    }
    
    public ArrayList<DataNode> getNewNodes(){
      return tempNodes;
    }
    
    public String getName(){return jTextField1.getText();}
    public Boolean getwbtParent(){return jCheckBox1.isSelected();}

    // Variables declaration - do not modify                     
        private javax.swing.JButton confirmBut;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JList parentList;
    private javax.swing.JList parentList1;
    // End of variables declaration                   
}
